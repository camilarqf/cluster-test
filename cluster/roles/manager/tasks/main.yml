---
  - name: Verifica se o Docker Swarm está habilitado
    shell: docker info
    changed_when: False
    register: docker_info
    become: yes

  - name: Cria o cluster no manager leader
    shell: docker swarm init --advertise-addr {{ docker_swarm_manager_ip }}:{{ docker_swarm_manager_port }}
    when: "docker_info.stdout.find('Swarm: active') == -1 and inventory_hostname == groups['docker_swarm_manager'][0]"
    become: yes

  - name: Configurando manager leader
    shell: docker node update --availability drain {{ ansible_hostname }}
    when: inventory_hostname == groups['docker_swarm_manager'][0]
    become: yes

  - name: Armazena o token de manager
    shell: docker swarm join-token -q manager
    changed_when: False
    register: docker_manager_token
    delegate_to: "{{ groups['docker_swarm_manager'][0] }}"
    when: "docker_info.stdout.find('Swarm: active') == -1"
    become: yes

  - name: Adiciona os outros swarms Managers no cluster.
    shell: docker swarm join --token "{{ docker_manager_token.stdout }}" {{ docker_swarm_manager_ip}}:{{ docker_swarm_manager_port }}
    changed_when: False
    when: "docker_info.stdout.find('Swarm: active') == -1
     and docker_info.stdout.find('Swarm: pending') == -1
     and 'docker_swarm_manager' in group_names
     and inventory_hostname != groups['docker_swarm_manager'][0]"
    become: yes

  - name: Verifica se a rede nginx-ingress-network já existe
    shell: docker network ls | grep -q nginx-ingress-network
    register: network_exists
    delegate_to: "{{ groups['docker_swarm_manager'][0] }}"
    ignore_errors: yes
    become: yes

  - name: Cria a rede nginx-ingress-network
    shell: docker network create --driver=overlay nginx-ingress-network
    delegate_to: "{{ groups['docker_swarm_manager'][0] }}"
    when: network_exists.rc != 0
    run_once: true
    become: yes